// Generated by view binder compiler. Do not edit!
package com.example.ejemploclaserecyclerview.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ejemploclaserecyclerview.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemLoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imgImagen;

  @NonNull
  public final ConstraintLayout linearLayout;

  @NonNull
  public final TextView txtNombre;

  @NonNull
  public final TextView txtTipo;

  private ItemLoBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView imgImagen,
      @NonNull ConstraintLayout linearLayout, @NonNull TextView txtNombre,
      @NonNull TextView txtTipo) {
    this.rootView = rootView;
    this.imgImagen = imgImagen;
    this.linearLayout = linearLayout;
    this.txtNombre = txtNombre;
    this.txtTipo = txtTipo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLoBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_lo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgImagen;
      ImageView imgImagen = ViewBindings.findChildViewById(rootView, id);
      if (imgImagen == null) {
        break missingId;
      }

      ConstraintLayout linearLayout = (ConstraintLayout) rootView;

      id = R.id.txtNombre;
      TextView txtNombre = ViewBindings.findChildViewById(rootView, id);
      if (txtNombre == null) {
        break missingId;
      }

      id = R.id.txtTipo;
      TextView txtTipo = ViewBindings.findChildViewById(rootView, id);
      if (txtTipo == null) {
        break missingId;
      }

      return new ItemLoBinding((ConstraintLayout) rootView, imgImagen, linearLayout, txtNombre,
          txtTipo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
